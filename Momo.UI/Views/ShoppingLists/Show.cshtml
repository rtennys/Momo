@model ShoppingListsShowModel

@{
    var routeData = Request.RequestContext.RouteData;
    ViewBag.Title = string.Format("{0}/{1}", routeData.Values["username"], routeData.Values["shoppinglist"]);
}

<p>@Html.ActionLink((string)routeData.Values["username"], "Index", "ShoppingLists"): <strong>@routeData.Values["shoppinglist"]</strong></p>

@if (CurrentUser.HasShoppingListAccess())
{
    <p>@Html.ActionLink("Add Items", "Index", "AddListItem")</p>
}

<p id="nothingNeededMsg" style="@(Model.ListItems.Any(x => !x.Picked && x.Quantity > 0) ? "display: none" : "")">
    Nothing needed!
</p>

<div id="items-container" class="hide-zero hide-picked">
    @foreach (var lookup in Model.ListItems.ToLookup(x => x.Aisle))
    {
        <div id="aisle_@lookup.Key" class="mb-3 aisle-container @(Model.Css(lookup))">
            <strong>Aisle @(lookup.Key == 0 ? "not set" : lookup.Key.ToString())</strong>
            @foreach (var listItem in lookup)
            {
                <div id="item_@listItem.Id" class="item-container mobileAccessible @listItem.Css" data-id="@listItem.Id" data-name="@listItem.Name" data-quantity="@listItem.Quantity" data-aisle="@listItem.Aisle">
                    <div class="row">
                        <div class="col-1">
                            <label class="d-block m-0 text-center"><input type="checkbox" name="picked" data-id="@listItem.Id" @(listItem.Picked ? "checked=\"checked\"" : "") @(CurrentUser.HasShoppingListAccess() ? "" : "disabled=\"disabled\"")/></label>
                        </div>
                        <div class="col">
                            <button class="btn d-block w-100 p-0 text-left list-item-name">@listItem.Name</button>
                        </div>
                        <div class="col-2 col-md-1">
                            <button class="btn d-block w-100 p-0 list-item-quantity">@listItem.Quantity</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@if (CurrentUser.HasShoppingListAccess())
{
    @Html.Partial("_EditListItemForm", new ShoppingListsEditItemModel {ShoppingListId = Model.Id})
}


@section FooterContent
{
    <div class="row mb-4">
        <div class="col">
            <label><input type="checkbox" id="hideZeros" checked="checked"/> Hide Zeros</label>
        </div>
        <div class="col text-right">
            <label><input type="checkbox" id="hidePicked" checked="checked"/> Hide Checked</label>
        </div>
    </div>

    @if (CurrentUser.HasShoppingListAccess())
    {
        using (Html.BeginForm("Clear", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <input type="hidden" name="CheckedOnly" value="True" />
            <p>
                <button type="submit" class="btn btn-sm btn-primary" onclick=" return confirm('Setting a quantity to zero removes the item from view, but doesn\'t forget it.  Set checked quantities to zero?'); ">Set checked to Zero</button>
            </p>
        }
        using (Html.BeginForm("Clear", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <input type="hidden" name="CheckedOnly" value="False" />
            <p>
                <button type="submit" class="btn btn-sm btn-primary" onclick=" return confirm('Setting a quantity to zero removes the item from view, but doesn\'t forget it.  Set all quantities to zero?'); ">Set all to Zero</button>
            </p>
        }
    }

    @if (CurrentUser.IsRouteUsername())
    {
        using (Html.BeginForm("Rename", "ShoppingLists", FormMethod.Get))
        {
            <p>
                <button type="submit" class="btn btn-sm btn-primary">Rename</button>
            </p>
        }
        using (Html.BeginForm("Share", "ShoppingLists", FormMethod.Get))
        {
            <p>
                <button type="submit" class="btn btn-sm btn-primary">Sharing</button>
            </p>
        }
        using (Html.BeginForm("Delete", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <p>
                <button type="submit" class="btn btn-sm btn-primary" onclick=" return confirm('Are you sure? All items and saved prices will be lost.'); ">Delete This List</button>
            </p>
        }
    }

}



@section scripts
{
    <script>
        $(function() {
            app.urls.changePicked = '@Url.Action("ChangePicked")';
            app.modules.shoppingListsShow.init();
        });
    </script>
}
