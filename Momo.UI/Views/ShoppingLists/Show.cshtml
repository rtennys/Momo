@using Momo.Common
@using Momo.Domain.Commands
@model ShoppingListsShowModel

@{
    var routeData = Request.RequestContext.RouteData;
    ViewBag.Title = "{0}/{1}".F(routeData.Values["username"], routeData.Values["shoppinglist"]);
}

<p>@Html.ActionLink((string)routeData.Values["username"], "Index", "ShoppingLists"): <strong>@routeData.Values["shoppinglist"]</strong></p>

@if (CurrentUser.HasShoppingListAccess())
{
    @Html.ActionLink("Add Items", "Index", "AddListItem")
}

<p id="nothingNeededMsg" style="@(Model.ListItems.Any(x => !x.Picked && x.Quantity > 0) ? "display: none" : "")">
    Nothing needed!
</p>

<div id="items-container" class="hide-zero hide-picked">
    @foreach (var lookup in Model.ListItems.ToLookup(x => x.Aisle))
    {
        <div id="aisle_@lookup.Key" class="aisle-container @(Model.Css(lookup))">
            <p>
                <strong>Aisle @(lookup.Key == 0 ? "not set" : lookup.Key.ToString())</strong>
            </p>

            @foreach (var listItem in lookup)
            {
                <div id="item_@listItem.Id" class="item-container mobileAccessible @listItem.Css" data-id="@listItem.Id" data-name="@listItem.Name" data-quantity="@listItem.Quantity" data-aisle="@listItem.Aisle">
                    <div class="row">
                        <div class="span1 clickable" style="text-align: center;">
                            <input type="checkbox" name="picked" data-id="@listItem.Id" @(listItem.Picked ? "checked=\"checked\"" : "") @(CurrentUser.HasShoppingListAccess() ? "" : "disabled=\"disabled\"") />
                        </div>
                        <div class="span10 clickable list-item-name">
                            @listItem.Name
                        </div>
                        <div class="span1 clickable list-item-quantity" style="text-align: center;">
                            @listItem.Quantity
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@if (CurrentUser.HasShoppingListAccess())
{
    @Html.Partial("_EditListItemForm", new EditShoppingListItemCommand {ShoppingListId = Model.Id})
}


@section FooterContent
{
    <div class="row">
        <div class="span6"><label><input type="checkbox" id="hideZeros" checked="checked" /> Hide Zeros</label></div>
        <div class="span6" style="text-align: right;"><label><input type="checkbox" id="hidePicked" checked="checked" /> Hide Checked</label></div>
    </div>

    @if (CurrentUser.HasShoppingListAccess())
    {
        using (Html.BeginForm("Clear", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <input type="hidden" name="CheckedOnly" value="True" />
            <p>
                <input type="submit" value="Set checked to Zero" onclick=" return confirm('Setting a quantity to zero removes the item from view, but doesn\'t forget it.  Set checked quantities to zero?'); " />
            </p>
        }
        using (Html.BeginForm("Clear", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <input type="hidden" name="CheckedOnly" value="False" />
            <p>
                <input type="submit" value="Set all to Zero" onclick=" return confirm('Setting a quantity to zero removes the item from view, but doesn\'t forget it.  Set all quantities to zero?'); " />
            </p>
        }
    }

    @if (CurrentUser.IsRouteUsername())
    {
        using (Html.BeginForm("Rename", "ShoppingLists", FormMethod.Get))
        {
            <p><input type="submit" value="Rename" /></p>
        }
        using (Html.BeginForm("Share", "ShoppingLists", FormMethod.Get))
        {
            <p><input type="submit" value="Sharing" /></p>
        }
        using (Html.BeginForm("Delete", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <p>
                <input type="submit" value="Delete This List" onclick=" return confirm('Are you sure? All items and saved prices will be lost.'); " />
            </p>
        }
    }

}



@section scripts
{
    <script>
        $(function() {
            app.urls.changePicked = '@Url.Action("ChangePicked")';
            app.modules.shoppingListsShow.init();
        });
    </script>
}
