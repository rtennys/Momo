@using Momo.Common
@model ShoppingListsShowModel

@{
    var routeData = Request.RequestContext.RouteData;
    ViewBag.HeaderTitle = "{0}/{1}".F(routeData.Values["username"], routeData.Values["shoppinglist"]);
    ViewBag.Title = Model.Name;
}

@* This is for the "picked" javascript*@
@Html.AntiForgeryToken()

@if (CurrentUser.HasShoppingListAccess())
{
    using (Html.BeginForm("additem", null, FormMethod.Post, new {data_bind = "submit: onAddItemSubmit", data_ajax = "false"}))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="ShoppingListId" value="@Model.Id" />
        <input type="text" name="Name" placeholder="new item" data-bind="value: newItemName, valueUpdate: 'afterkeydown'" />
        @Html.ValidationSummary()
    }
}

<p id="loading-msg"><strong><em>Loading...</em></strong></p>

<div id="items-container" style="display: none;">
    <div data-bind="visible: listItems().length == 0" style="color: #777; font-style: italic; border: solid 1px #bbb; padding: 15px; border-radius: 0.6em; box-shadow: 0 1px 4px rgba(0, 0, 0, 0.2) inset">
        No items
    </div>
    <ul data-bind="foreach: listItems" data-role="listview" data-inset="true" data-split-icon="gear" data-split-theme="d">
        <!-- ko if: showDivider -->
        <li data-role="list-divider">
            Aisle <span data-bind="text: Aisle() == 0 ? 'not set' : Aisle()"></span>
        </li>
        <!-- /ko -->
        <li data-icon="false" data-bind="visible: isVisible">
            <input type="hidden" data-bind="value: Aisle" id="hidAisle" />
            <a href="#" style="padding: 0;">
                <fieldset data-role="controlgroup" style="margin: 0;">
                    <input type="checkbox" data-bind="checked: Picked, click: $root.onPickedChange, attr: {name: htmlName, id: htmlName}" @(CurrentUser.HasShoppingListAccess() ? "" : "disabled=\"disabled\"") />
                    <label data-bind="text: Name, attr: {for: htmlName}" style="font-size: .85em; border: 0;"></label>
                </fieldset>
                <span data-bind="text: Quantity" class="ui-li-count" style="z-index: 1;"></span>
            </a>
            @if (CurrentUser.HasShoppingListAccess())
            {
                <a href="#" data-bind="click: $root.onEditItem">Edit</a>
            }
        </li>
    </ul>
</div>

<div data-bind="with: itemToEdit" id="edit-item-container" data-role="popup" data-history="false" class="ui-content" style="display: none;">
    @using (Html.BeginForm("edititem", null, FormMethod.Post, new {data_bind = "submit: $root.onEditItemSubmit", data_ajax = "false"}))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" value="@Model.Id" name="ShoppingListId" />
        <input type="hidden" data-bind="value: Id" name="Id" />
        <ol>
            <li>
                <label>Name</label>
                <input type="text" data-bind="value: Name" placeholder="Name" name="Name" data-val-required="Name is required." data-val="true" autocomplete="off" />
            </li>
            <li>
                <label>Quantity</label>
                <input type="text" data-bind="value: Quantity" placeholder="Quantity" name="Quantity" data-val-range-min="0" data-val-range-max="2147483647" data-val-range="Quantity must be ae positive number" data-val-number="Quantity must be a number." data-val="true" autocomplete="off" />
            </li>
            <li>
                <label>Aisle</label>
                <input type="text" data-bind="value: Aisle" placeholder="Aisle" name="Aisle" data-val-number="Aisle must be a number." data-val="true" autocomplete="off" />
            </li>
            <li>
                <label>Price</label>
                <input type="text" data-bind="value: Price" placeholder="Price" name="Price" data-val-number="Price must be a number." data-val="true" autocomplete="off" />
            </li>
        </ol>
        <input type="submit" value="Done" />
        @Html.ValidationSummary()
    }
</div>

@section FooterBarButtons
{
    <div class="unit size1of3">
        <label><input type="checkbox" data-bind="checked: hideZero" data-mini="true" /> Hide Zero</label>
    </div>
    <div class="unit size1of3">
        <label><input type="checkbox" data-bind="checked: hidePicked" data-mini="true" /> Hide Checked</label>
    </div>
}

@section FooterContent
{

    @if (CurrentUser.HasShoppingListAccess())
    {
        using (Html.BeginForm("Clear", null, FormMethod.Post, new { data_ajax = "false" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            <p>
                <input type="submit" value="Set all to Zero" data-icon="refresh" data-mini="true" data-inline="true" onclick=" return confirm('Setting a quantity to zero removes the item from view, but doesn\'t forget it.  Set all quantities to zero?'); " />
            </p>
        }
    }

    @if (CurrentUser.IsRouteUsername())
    {
        <p>
            @Html.ActionLink("Rename", "Rename", null, new { data_role = "button", data_icon = "gear", data_mini = "true", data_inline = "true", data_ajax = "false" })
            @Html.ActionLink("Sharing", "Share", null, new { data_role = "button", data_icon = "gear", data_mini = "true", data_inline = "true", data_ajax = "false" })
        </p>
        using (Html.BeginForm("Delete", null, FormMethod.Post, new { data_ajax = "false" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            <p>
                <input type="submit" value="Delete This List" data-icon="delete" data-mini="true" data-inline="true" onclick=" return confirm('Are you sure? All items and saved prices will be lost.'); " />
            </p>
        }
    }

}
