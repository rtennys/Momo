@using Momo.Common
@model ShoppingListsShowModel

@{
    var routeData = Request.RequestContext.RouteData;
    ViewBag.HeaderTitle = "{0}/{1}".F(routeData.Values["username"], routeData.Values["shoppinglist"]);
    ViewBag.Title = Model.Name;
}

<p>@Html.ActionLink((string)routeData.Values["username"], "Index", "ShoppingLists"): <strong>@Model.Name</strong></p>

@if (CurrentUser.HasShoppingListAccess())
{
    using (Html.BeginForm("additem", null, FormMethod.Post, new {data_bind = "submit: onAddItemSubmit"}))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="ShoppingListId" value="@Model.Id" />
        <ol>
            <li><input type="text" id="txtAddItem" name="Name" placeholder="new item" data-bind="'value': newItemName, 'valueUpdate': 'afterkeydown'" /></li>
        </ol>
        @Html.ValidationSummary()
    }
}

<div data-bind="'text': noItemsMsg, 'visible': noItemsVisible"></div>

<div data-bind="foreach: listItems" id="items-container" style="display: none;">

    <!-- ko 'if': showDivider -->
    <p style="font-weight: bold;">
        Aisle <span data-bind="'text': Aisle() == 0 ? 'not set' : Aisle()"></span>
    </p>
    <!-- /ko -->

    <!-- ko 'if': isVisible -->
    <div data-bind="'css': { 'faded': Picked() || Quantity() == 0 }" class="mobileAccessible">
        <div class="row">
            <div class="span1 clickable" style="text-align: center;">
                <input type="checkbox" data-bind="'checked': Picked@(CurrentUser.HasShoppingListAccess() ? ", 'click': $root.onChangePicked" : "")" @(CurrentUser.HasShoppingListAccess() ? "" : "disabled=\"disabled\"") />
            </div>
            <div class="span10 clickable" data-bind="@(CurrentUser.HasShoppingListAccess() ? "'click': $root.onEditItemClick" : "")">
                <span data-bind="'text': Name "></span>
            </div>
            <div class="span1 clickable" style="text-align: center;" data-bind="@(CurrentUser.HasShoppingListAccess() ? "'click': $root.onEditItemClick" : "")">
                <span data-bind="'text': Quantity ">0</span>
            </div>
        </div>
    </div>
    <!-- /ko -->

</div>

<p style="text-align: right;">
    Estimated Total: <span data-bind="'moneyText': estimatedTotal"></span> <br />
    <small>estimate is based on the prices you have provided</small>
</p>



<div data-bind="'with': itemToEdit" id="edit-item-container" style="display: none;">
    @using (Html.BeginForm("edititem", null, FormMethod.Post, new {data_bind = "submit: $root.onEditItemSubmit"}))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" value="@Model.Id" name="ShoppingListId" />
        <input type="hidden" data-bind="'value': Id" name="Id" />
        <ol>
            <li>
                <label>Name</label>
                <input type="text" data-bind="'value': Name" placeholder="Name" name="Name" data-val-required="Name is required." data-val="true" autocomplete="off" />
            </li>
            <li>
                <label>Quantity</label>
                <input type="text" data-bind="'value': Quantity" placeholder="Quantity" name="Quantity" data-val-range-min="0" data-val-range-max="2147483647" data-val-range="Quantity must be ae positive number" data-val-number="Quantity must be a number." data-val="true" autocomplete="off" />
            </li>
            <li>
                <label>Aisle</label>
                <input type="text" data-bind="'value': Aisle" placeholder="Aisle" name="Aisle" data-val-number="Aisle must be a number." data-val="true" autocomplete="off" />
            </li>
            <li>
                <label>Price</label>
                <input type="text" data-bind="'moneyValue': Price" placeholder="Price" name="Price" data-val-number="Price must be a number." data-val="true" autocomplete="off" />
            </li>
        </ol>

        <input type="submit" value="Done" />
        @Html.ValidationSummary()

        <p style="margin-top: 25px;">
            <input data-bind="'click': $root.onForgetItemClick" type="button" value="Forget this item" data-icon="delete" />
        </p>
    }
</div>


@section FooterContent
{
    <div class="row">
        <div class="span6"><label><input type="checkbox" data-bind="'checked': hideZeros" checked="checked" /> Hide Zeros</label></div>
        <div class="span6" style="text-align: right;"><label><input type="checkbox" data-bind="'checked': hidePicked" checked="checked" /> Hide Checked</label></div>
    </div>

    @if (CurrentUser.HasShoppingListAccess())
    {
        using (Html.BeginForm("Clear", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <input type="hidden" name="CheckedOnly" value="True" />
            <p>
                <input type="submit" value="Set checked to Zero" onclick=" return confirm('Setting a quantity to zero removes the item from view, but doesn\'t forget it.  Set checked quantities to zero?'); " />
            </p>
        }
        using (Html.BeginForm("Clear", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <input type="hidden" name="CheckedOnly" value="False" />
            <p>
                <input type="submit" value="Set all to Zero" onclick=" return confirm('Setting a quantity to zero removes the item from view, but doesn\'t forget it.  Set all quantities to zero?'); " />
            </p>
        }
    }

    @if (CurrentUser.IsRouteUsername())
    {
        using (Html.BeginForm("Rename", "ShoppingLists", FormMethod.Get))
        {
            <p><input type="submit" value="Rename" /></p>
        }
        using (Html.BeginForm("Share", "ShoppingLists", FormMethod.Get))
        {
            <p><input type="submit" value="Sharing" /></p>
        }
        using (Html.BeginForm("Delete", "ShoppingLists"))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="@Html.IdFor(m => m.Id)" value="@Model.Id" />
            <p>
                <input type="submit" value="Delete This List" onclick=" return confirm('Are you sure? All items and saved prices will be lost.'); " />
            </p>
        }
    }

}



@section scripts
{
    @Scripts.Render("~/bundles/knockout")

    <script>
        app.modules.shoppingListsShow.init({
            show: '@Url.Action("Show")',
            changePicked: '@Url.Action("ChangePicked")',
            deleteItem: '@Url.Action("DeleteItem")',
            autocomplete: '@Url.Action("Autocomplete")'
        });
    </script>
}
